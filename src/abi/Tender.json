{
  "address": "0x2d5ed0420B411887c24e17deA8FC04F0b45e9294",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_auxContracts",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_chainlinkPriceFeed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_chainlinkIndexFeed",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_daiExchangeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_daiLaggardExchangeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gohmExchangeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_gohmLaggardExchangeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxDeposits",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tenderDecimals",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyRedeemed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyWithdrawn",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadChoice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ChoiceChange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DepositLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidState",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daiDistributed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daiExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daiLaggardExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "enum Escrow.RedemptionChoice",
          "name": "_choice",
          "type": "uint8"
        },
        {
          "internalType": "enum Escrow.DepositToken",
          "name": "_depositToken",
          "type": "uint8"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ohmPrice",
          "type": "uint256"
        },
        {
          "internalType": "enum Escrow.RedemptionChoice",
          "name": "choice",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "didRedeem",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isLaggard",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gOHM",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gOHMDistributed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ohmPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLaggard",
          "type": "bool"
        }
      ],
      "name": "getGohmExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestOHMIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestOHMPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gohmExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gohmLaggardExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxDeposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setFailed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setPassed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setPending",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staking",
      "outputs": [
        {
          "internalType": "contract IStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Escrow.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tenderToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDeposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalRedemptions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unstakedTenderToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wsTenderToken",
      "outputs": [
        {
          "internalType": "contract IwsTT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa6352a4f65bc9293b09b16e7a682d617a7e49b92c6a80ea90f5b9b68506c2f55",
  "receipt": {
    "to": null,
    "from": "0x403898Ddff450b89e2D96BDDcf763541655FDE8B",
    "contractAddress": "0x2d5ed0420B411887c24e17deA8FC04F0b45e9294",
    "transactionIndex": 0,
    "gasUsed": "1684181",
    "logsBloom": "0x
    "blockHash": "0x00001bac00002c33092dd77eb67f58902eb478b96d6ae666cf29f6455b2c7a55",
    "transactionHash": "0xa6352a4f65bc9293b09b16e7a682d617a7e49b92c6a80ea90f5b9b68506c2f55",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 8013503,
        "transactionHash": "0xa6352a4f65bc9293b09b16e7a682d617a7e49b92c6a80ea90f5b9b68506c2f55",
        "address": "0x2d5ed0420B411887c24e17deA8FC04F0b45e9294",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000403898ddff450b89e2d96bddcf763541655fde8b"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x00001bac00002c33092dd77eb67f58902eb478b96d6ae666cf29f6455b2c7a55"
      }
    ],
    "blockNumber": 8013503,
    "cumulativeGasUsed": "1684181",
    "status": 1,
    "byzantium": true
  },
  "args": [
    [
      "0x5ee644AE1aA7D8DA5697A1435a8CEC5a110875A8",
      "0x313987763809Fa69E02744aaA817A4A6909CBd73",
      "0xF4a012D3384646F5E1d1F41b2Af6E6cEE40E0e97",
      "0x50B3e0676E153Addf7983d5AE755d356972FaD4C"
    ],
    ["0xDF28F23a2A6ddB46cd59420dE6c0313aC95A194C", "0x74BbDF5841551dae205bFE4BA9dAc0C78Ef993C4"],
    "0x2c97A5542135b6cE80Cd6Af94015Ac3E3F3B650a",
    "0x58318fEeB32DBB17324D67989AA01EFc2f722f71",
    "50000000000000000000",
    0,
    "55000000000000000000",
    "45000000000000000000",
    "123612225892886635748159",
    "1000000000"
  ],
  "numDeployments": 3,
  "solcInputHash": "6ab5c29c46b4b4d620a4340d6dfb2724",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_auxContracts\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_chainlinkPriceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_chainlinkIndexFeed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_daiExchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_daiLaggardExchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gohmExchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gohmLaggardExchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxDeposits\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tenderDecimals\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyRedeemed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyWithdrawn\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadChoice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ChoiceChange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DepositLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidState\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"daiLaggardExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"enum Escrow.RedemptionChoice\",\"name\":\"_choice\",\"type\":\"uint8\"},{\"internalType\":\"enum Escrow.DepositToken\",\"name\":\"_depositToken\",\"type\":\"uint8\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ohmPrice\",\"type\":\"uint256\"},{\"internalType\":\"enum Escrow.RedemptionChoice\",\"name\":\"choice\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"didRedeem\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isLaggard\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gOHM\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gOHMDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_ohmPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLaggard\",\"type\":\"bool\"}],\"name\":\"getGohmExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestOHMIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestOHMPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gohmExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gohmLaggardExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setFailed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setPassed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setPending\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staking\",\"outputs\":[{\"internalType\":\"contract IStaking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum Escrow.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tenderToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRedemptions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakedTenderToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wsTenderToken\",\"outputs\":[{\"internalType\":\"contract IwsTT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256,uint8,uint8)\":{\"details\":\"tenderToken, unstaked tenderToken, or wrapped tenderTokens should be  approved for _amount before calling this\",\"params\":{\"_amount\":\"the about of tender tokens to deposit (9 decimals)\",\"_choice\":\"the redemption choice (see: RedemptionChoice)\",\"_depositToken\":\"0 - unstaked, 1 - staked, 2 - wrapped\"}},\"getGohmExchangeRate(uint256,uint256,bool)\":{\"details\":\"1e17 is to compensate for Chainlink oracle decimals of 9 for _index and 8 for _ohmPrice\"},\"getLatestOHMIndex()\":{\"returns\":{\"_0\":\"most recent OHM index in 9 decimals from Chainlink\"}},\"getLatestOHMPrice()\":{\"returns\":{\"_0\":\"most recent OHM price in 8 decimals from Chainlink\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recoverERC20(address,uint256)\":{\"params\":{\"_amount\":\"the amount of `_token` to recover\",\"_token\":\"the token's address\"}},\"redeem()\":{\"details\":\"Since the target token is in 9 decimals\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"daiExchangeRate()\":{\"notice\":\"DAI per tender token if depositing BEFORE decision (18 decimals)\"},\"daiLaggardExchangeRate()\":{\"notice\":\"DAI per tender token if depositing AFTER decision (18 decimals)\"},\"deposit(uint256,uint8,uint8)\":{\"notice\":\"deposits tender tokens. Includes the desired redemption currency if the takeover bid succeeds. Locks in the price and index of gOHM at time of deposit. Subsequent deposits can be made, but the must include the same redemption choice as before. Will do the necessary steps to stake and wrap tokens. - Depositing wrapped tokens just transfers - Depositing staked tokens will transfer then wrap - Depositing unstaked tokens will transfer, stake, then wrap\"},\"getGohmExchangeRate(uint256,uint256,bool)\":{\"notice\":\"Returns what gOHM amount represents the tender offer exchange rate\"},\"getLatestOHMIndex()\":{\"notice\":\"Gets lates OHM index from Chainlink Oracle\"},\"getLatestOHMPrice()\":{\"notice\":\"Gets lates OHM price from Chainlink Oracle\"},\"gohmExchangeRate()\":{\"notice\":\"gOHM per tender token if depositing BEFORE decision (18 decimals)\"},\"gohmLaggardExchangeRate()\":{\"notice\":\"gOHM per tender token if depositing AFTER decision (18 decimals)\"},\"recoverERC20(address,uint256)\":{\"notice\":\"allows owner to withdraw arbitratry ERC20 tokens to msg.sender. Must be called by the owner\"},\"redeem()\":{\"notice\":\"redeems the tender tokens for the depositors chosen currency\"},\"setFailed()\":{\"notice\":\"set takeover state to failed. Allows depositors to withdraw\"},\"setPassed()\":{\"notice\":\"set the takeover state to passed. Allows depositors to redeem\"},\"setPending()\":{\"notice\":\"set the takeover state back to pending. Useful on testnets\"},\"withdraw()\":{\"notice\":\"withdraw all tender tokens after a failed takeover\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Escrow.sol\":\"Escrow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Escrow.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {SafeERC20} from \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport {IwsTT} from \\\"./interfaces/IwsTT.sol\\\";\\nimport {IStaking} from \\\"./interfaces/IStaking.sol\\\";\\n\\ncontract Escrow is Ownable {\\n    using SafeERC20 for IERC20;\\n    using SafeERC20 for IwsTT;\\n\\n    error InvalidState();\\n    error AlreadyRedeemed();\\n    error DepositLimit();\\n    error ChoiceChange();\\n    error BadChoice();\\n    error AlreadyWithdrawn();\\n\\n    IERC20 public immutable tenderToken;\\n    IERC20 public immutable unstakedTenderToken;\\n    IERC20 public immutable dai;\\n    IERC20 public immutable gOHM;\\n    IwsTT public immutable wsTenderToken;\\n    IStaking public immutable staking;\\n    AggregatorV3Interface internal immutable priceFeed;\\n    AggregatorV3Interface internal immutable indexFeed;\\n\\n    /// DAI per tender token if depositing BEFORE decision (18 decimals)\\n    uint256 public daiExchangeRate;\\n    /// DAI per tender token if depositing AFTER decision (18 decimals)\\n    uint256 public daiLaggardExchangeRate;\\n    /// gOHM per tender token if depositing BEFORE decision (18 decimals)\\n    uint256 public gohmExchangeRate;\\n    /// gOHM per tender token if depositing AFTER decision (18 decimals)\\n    uint256 public gohmLaggardExchangeRate;\\n    /// value to adjust tender token decimals to match DAI and gOHM\\n    uint256 internal immutable decimalAdjuster;\\n\\n    enum State { PENDING, FAILED, PASSED }\\n    State public state; // the current state of the takeover\\n\\n    enum RedemptionChoice { DAI, GOHM }\\n    enum DepositToken { UNSTAKED, STAKED, WRAPPED }\\n    struct Deposit {\\n        uint256 amount; // amount of wrapped staked tender tokens (18 decimals)\\n        uint256 index; // OHM index\\n        uint256 ohmPrice; // OHM / USD price\\n        RedemptionChoice choice; // 0 - DAI, 1 - gOHM\\n        bool didRedeem;\\n        bool isLaggard; // deposit happened after takeover decision\\n    }\\n    mapping (address => Deposit) public deposits;\\n    uint256 public totalDeposits; // total amount of wrapped tender tokens deposited (18 decimals)\\n    uint256 public immutable maxDeposits; // max allowable wrapped tender tokens (18 decimals)\\n\\n    uint256 public totalRedemptions; // total number of wrapped tokens redeemed (18 decimals)\\n\\n    uint256 public daiDistributed; // DAI distributed via redemptions (18 decimals)\\n    uint256 public gOHMDistributed; // gOHM distributed vai redemptions (18 decimals)\\n\\n    constructor(\\n        IERC20[] memory _tokens,\\n        address[] memory _auxContracts,\\n        address _chainlinkPriceFeed,\\n        address _chainlinkIndexFeed,\\n        uint256 _daiExchangeRate,\\n        uint256 _daiLaggardExchangeRate,\\n        uint256 _gohmExchangeRate,\\n        uint256 _gohmLaggardExchangeRate,\\n        uint256 _maxDeposits,\\n        uint256 _tenderDecimals\\n    ) {\\n        require(address(_tokens[0]) != address(0), \\\"0x0 tender token\\\");\\n        require(address(_tokens[1]) != address(0), \\\"0x0 unstaked tender token\\\");\\n        require(address(_tokens[2]) != address(0), \\\"0x0 DAI\\\");\\n        require(address(_tokens[3]) != address(0), \\\"0x0 gOHM\\\");\\n        require(address(_auxContracts[0]) != address(0), \\\"0x0 wrapped staked tender token\\\");\\n        require(_maxDeposits <= IwsTT(_auxContracts[0]).totalSupply(), \\\"max deposit too big\\\");\\n\\n        maxDeposits = _maxDeposits;\\n        tenderToken = _tokens[0];\\n        unstakedTenderToken = _tokens[1];\\n        dai = _tokens[2];\\n        gOHM = _tokens[3];\\n        wsTenderToken = IwsTT(_auxContracts[0]);\\n        staking = IStaking(_auxContracts[1]);\\n        priceFeed = AggregatorV3Interface(_chainlinkPriceFeed);\\n        indexFeed = AggregatorV3Interface(_chainlinkIndexFeed);\\n        daiExchangeRate = _daiExchangeRate;\\n        daiLaggardExchangeRate = _daiLaggardExchangeRate;\\n        gohmExchangeRate = _gohmExchangeRate;\\n        gohmLaggardExchangeRate = _gohmLaggardExchangeRate;\\n        decimalAdjuster = 1e18 / _tenderDecimals; // calculates what value you have to multiply tender token amounts by\\n    }\\n\\n    /**\\n     * @notice deposits tender tokens. Includes the desired redemption currency\\n     * if the takeover bid succeeds. Locks in the price and index of gOHM at time\\n     * of deposit.\\n     * Subsequent deposits can be made, but the must include the same redemption\\n     * choice as before.\\n     * Will do the necessary steps to stake and wrap tokens.\\n     * - Depositing wrapped tokens just transfers\\n     * - Depositing staked tokens will transfer then wrap\\n     * - Depositing unstaked tokens will transfer, stake, then wrap\\n     * @dev tenderToken, unstaked tenderToken, or wrapped tenderTokens should be \\n     * approved for _amount before calling this\\n     * @param _amount the about of tender tokens to deposit (9 decimals)\\n     * @param _choice the redemption choice (see: RedemptionChoice)\\n     * @param _depositToken 0 - unstaked, 1 - staked, 2 - wrapped\\n     */\\n    function deposit(uint256 _amount, RedemptionChoice _choice, DepositToken _depositToken) external {\\n        if (state == State.FAILED) revert InvalidState();\\n        uint256 wrappedAmount = wsTenderToken.sOHMTowOHM(_amount);\\n        uint256 depositAmount = _depositToken == DepositToken.WRAPPED ? _amount : wrappedAmount;\\n        if (totalDeposits + depositAmount > maxDeposits) revert DepositLimit();\\n        Deposit memory prev = deposits[msg.sender];\\n        if (prev.amount > 0 && prev.choice != _choice) revert ChoiceChange();\\n\\n        if (prev.amount > 0) {\\n            // pushed a new deposit, only update amount\\n            deposits[msg.sender].amount += depositAmount;\\n        } else {\\n            deposits[msg.sender] = Deposit(\\n                depositAmount,\\n                getLatestOHMIndex(),\\n                getLatestOHMPrice(),\\n                _choice,\\n                false,\\n                state == State.PASSED\\n            );\\n        }\\n        totalDeposits += depositAmount;\\n\\n        if (_depositToken == DepositToken.WRAPPED) {\\n            wsTenderToken.safeTransferFrom(msg.sender, address(this), _amount);\\n        } else if (_depositToken == DepositToken.STAKED) {\\n            tenderToken.safeTransferFrom(msg.sender, address(this), _amount);\\n            tenderToken.safeApprove(address(wsTenderToken), _amount);\\n            wsTenderToken.wrap(_amount);\\n        } else if (_depositToken == DepositToken.UNSTAKED) {\\n            unstakedTenderToken.safeTransferFrom(msg.sender, address(this), _amount);\\n            unstakedTenderToken.safeApprove(address(staking), _amount);\\n            staking.stake(_amount, address(this));\\n            staking.claim(address(this));\\n            tenderToken.safeApprove(address(wsTenderToken), _amount);\\n            wsTenderToken.wrap(_amount);\\n        }\\n    }\\n\\n    /**\\n     * @notice withdraw all tender tokens after a failed takeover\\n     */\\n    function withdraw() external {\\n        if (state != State.FAILED) revert InvalidState();\\n        Deposit memory deposit_ = deposits[msg.sender];\\n        if (deposit_.amount == 0) revert AlreadyWithdrawn();\\n        deposits[msg.sender].amount  = 0;\\n        totalDeposits -= deposit_.amount;\\n        wsTenderToken.safeTransfer(msg.sender, deposit_.amount);\\n    }\\n\\n    /**\\n     * @notice redeems the tender tokens for the depositors chosen currency\\n     * @dev Since the target token is in 9 decimals\\n     */\\n    function redeem() external {\\n        Deposit memory deposit_ = deposits[msg.sender];\\n        if (state != State.PASSED) revert InvalidState();\\n        if (deposit_.didRedeem) revert AlreadyRedeemed();\\n\\n        totalRedemptions += deposit_.amount;\\n\\n        if (deposit_.choice == RedemptionChoice.DAI) {\\n            uint256 daiRate = deposit_.isLaggard ? daiLaggardExchangeRate : daiExchangeRate;\\n            uint256 daiAmount = deposit_.amount * decimalAdjuster * daiRate / 1e18;\\n            daiDistributed += daiAmount;\\n            deposits[msg.sender].didRedeem = true;\\n\\n            dai.safeTransfer(msg.sender, daiAmount);\\n        } else if (deposit_.choice == RedemptionChoice.GOHM) {\\n            uint256 gOHMExchangeRate = getGohmExchangeRate(deposit_.index, deposit_.ohmPrice, deposit_.isLaggard);\\n            uint256 gOHMAmount = deposit_.amount * decimalAdjuster * gOHMExchangeRate / 1e18;\\n            gOHMDistributed += gOHMAmount;\\n            deposits[msg.sender].didRedeem = true;\\n\\n            gOHM.safeTransfer(msg.sender, gOHMAmount);\\n        } else {\\n            revert BadChoice(); // can this be hit?\\n        }\\n    }\\n\\n    /**\\n     * @notice set the takeover state to passed. Allows depositors to redeem\\n     */\\n    function setPassed() external onlyOwner {\\n       state = State.PASSED;\\n    }\\n\\n    /**\\n     * @notice set takeover state to failed. Allows depositors to withdraw\\n     */\\n    function setFailed() external onlyOwner {\\n       state = State.FAILED;\\n    }\\n\\n    /**\\n     * @notice set the takeover state back to pending. Useful on testnets\\n     */\\n    function setPending() external onlyOwner {\\n       state = State.PENDING;\\n    }\\n\\n    /**\\n     * @notice allows owner to withdraw arbitratry ERC20 tokens to msg.sender. Must be called\\n     * by the owner\\n     * @param _token the token's address\\n     * @param _amount the amount of `_token` to recover\\n     */\\n    function recoverERC20(address _token, uint256 _amount) external onlyOwner {\\n        IERC20(_token).safeTransfer(msg.sender, _amount);\\n    }\\n\\n    /*******************\\n     * UTILITIES\\n     ******************/\\n\\n     /**\\n        @notice Gets lates OHM price from Chainlink Oracle\\n        @return most recent OHM price in 8 decimals from Chainlink\\n      */\\n     function getLatestOHMPrice() public view returns (uint256) {\\n        (,int256 answer,,,) = priceFeed.latestRoundData();\\n        return uint256(answer);\\n     }\\n\\n     /**\\n        @notice Gets lates OHM index from Chainlink Oracle\\n        @return most recent OHM index in 9 decimals from Chainlink\\n      */\\n     function getLatestOHMIndex() public view returns (uint256) {\\n        (,int256 answer,,,) = indexFeed.latestRoundData();\\n        return uint256(answer);\\n     }\\n\\n     /**\\n        @notice Returns what gOHM amount represents the tender offer exchange rate\\n        @dev 1e17 is to compensate for Chainlink oracle decimals of 9 for _index and 8 for _ohmPrice\\n      */\\n     function getGohmExchangeRate(uint256 _index, uint256 _ohmPrice, bool isLaggard) public view returns (uint256) {\\n        uint256 gohmRate = isLaggard ? gohmLaggardExchangeRate : gohmExchangeRate;\\n        return (gohmRate * 1e17) / (_index * _ohmPrice);\\n     }\\n}\",\"keccak256\":\"0xbc6d86285e393bb56bf5501a2fb1a6ffec7111e5e0cdfa7cd09da207a254eeed\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IStaking.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.10;\\n\\ninterface IStaking {\\n\\tfunction stake(uint256 _amount, address _recipient) external returns(bool);\\n\\n\\tfunction claim(address _recipient) external;\\n}\",\"keccak256\":\"0xf7d051bbccc0594d2bfa01a90fcea6760baf0ab074b16c1370b0e226dba2e7ee\",\"license\":\"AGPL-3.0-or-later\"},\"contracts/interfaces/IwsTT.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-or-later\\npragma solidity ^0.8.10;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IwsTT is IERC20 {\\n\\tfunction wrap( uint _amount ) external returns ( uint );\\n\\n\\tfunction wOHMTosOHM(uint256 _amount) external view returns(uint256);\\n\\n\\tfunction sOHMTowOHM(uint256 _amount) external view returns(uint256);\\n}\",\"keccak256\":\"0x56d3cb36efb6095355ffe131207891b7df0dcfb85a5a109a5094009487c1d597\",\"license\":\"AGPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c80637d88209711610104578063be040fb0116100a2578063ed9c080911610071578063ed9c0809146103da578063f2fde38b146103e2578063f4b9fa75146103f5578063fc7e286d1461041c57600080fd5b8063be040fb0146103a7578063c19d93fb146103af578063e21cef39146103c9578063e3d6ae3d146103d157600080fd5b80638da5cb5b116100de5780638da5cb5b14610371578063a2649ab414610382578063b62f1cb31461038b578063b881b3571461039457600080fd5b80637d8820971461034c57806381064b25146103555780638980f11f1461035e57600080fd5b8063354d594b1161017c5780634b8e72301161014b5780634b8e7230146102ee5780634cf088d9146103155780636b2923a51461033c578063715018a61461034457600080fd5b8063354d594b146102a4578063396d3781146102cb5780633ccfd60b146102d357806340bda99c146102db57600080fd5b806318404196116101b857806318404196146102545780631b0b32581461026b57806327927390146102745780632d8221601461027d57600080fd5b80630552e978146101df5780630cd3058514610223578063146901db1461024a575b600080fd5b6102067f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6102067f000000000000000000000000000000000000000000000000000000000000000081565b610252610479565b005b61025d60015481565b60405190815260200161021a565b61025d60095481565b61025d60035481565b6102067f000000000000000000000000000000000000000000000000000000000000000081565b61025d7f000000000000000000000000000000000000000000000000000000000000000081565b6102526104c2565b610252610500565b61025d6102e93660046117d1565b610654565b6102067f000000000000000000000000000000000000000000000000000000000000000081565b6102067f000000000000000000000000000000000000000000000000000000000000000081565b61025d61069b565b61025261072b565b61025d60075481565b61025d60085481565b61025261036c366004611826565b610761565b6000546001600160a01b0316610206565b61025d600a5481565b61025d60025481565b6102526103a2366004611850565b6107a3565b610252610f2a565b6005546103bc9060ff1681565b60405161021a91906118a5565b61025261123c565b61025d60045481565b61025d61127a565b6102526103f03660046118bf565b6112db565b6102067f000000000000000000000000000000000000000000000000000000000000000081565b61046761042a3660046118bf565b60066020526000908152604090208054600182015460028301546003909301549192909160ff808216916101008104821691620100009091041686565b60405161021a969594939291906118da565b6000546001600160a01b031633146104ac5760405162461bcd60e51b81526004016104a39061191e565b60405180910390fd5b600580546001919060ff191682805b0217905550565b6000546001600160a01b031633146104ec5760405162461bcd60e51b81526004016104a39061191e565b600580546000919060ff19166001836104bb565b600160055460ff1660028111156105195761051961188f565b146105375760405163baf3f0f760e01b815260040160405180910390fd5b336000908152600660209081526040808320815160c0810183528154815260018083015494820194909452600282015492810192909252600381015491929091606084019160ff909116908111156105915761059161188f565b60018111156105a2576105a261188f565b81526003919091015460ff61010082048116151560208401526201000090910416151560409091015280519091506105ed57604051636507689f60e01b815260040160405180910390fd5b33600090815260066020526040812081905581516007805491929091610614908490611969565b90915550508051610651906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016903390611373565b50565b6000808261066457600354610668565b6004545b90506106748486611980565b6106868267016345785d8a0000611980565b610690919061199f565b9150505b9392505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072091906119db565b509195945050505050565b6000546001600160a01b031633146107555760405162461bcd60e51b81526004016104a39061191e565b61075f60006113d6565b565b6000546001600160a01b0316331461078b5760405162461bcd60e51b81526004016104a39061191e565b61079f6001600160a01b0383163383611373565b5050565b600160055460ff1660028111156107bc576107bc61188f565b14156107db5760405163baf3f0f760e01b815260040160405180910390fd5b604051631cfde70160e21b8152600481018490526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906373f79c0490602401602060405180830381865afa158015610843573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108679190611a2b565b90506000600283600281111561087f5761087f61188f565b1461088a578161088c565b845b90507f0000000000000000000000000000000000000000000000000000000000000000816007546108bd9190611a44565b11156108dc576040516366fef29360e11b815260040160405180910390fd5b336000908152600660209081526040808320815160c0810183528154815260018083015494820194909452600282015492810192909252600381015491929091606084019160ff909116908111156109365761093661188f565b60018111156109475761094761188f565b81526003919091015460ff6101008204811615156020840152620100009091041615156040909101528051909150158015906109a957508460018111156109905761099061188f565b816060015160018111156109a6576109a661188f565b14155b156109c7576040516310bccbb960e31b815260040160405180910390fd5b8051156109f85733600090815260066020526040812080548492906109ed908490611a44565b90915550610af19050565b6040518060c00160405280838152602001610a1161127a565b8152602001610a1e61069b565b8152602001866001811115610a3557610a3561188f565b815260006020820152604001600260055460ff166002811115610a5a57610a5a61188f565b149052336000908152600660209081526040918290208351815590830151600180830191909155918301516002820155606083015160038201805492939192909160ff19909116908381811115610ab357610ab361188f565b021790555060808201516003909101805460a0909301511515620100000262ff000019921515610100029290921662ffff0019909316929092171790555b8160076000828254610b039190611a44565b9091555060029050846002811115610b1d57610b1d61188f565b1415610b5d57610b586001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333089611426565b610f22565b6001846002811115610b7157610b7161188f565b1415610c9157610bac6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333089611426565b610c006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000088611464565b604051630ea598cb60e41b8152600481018790527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ea598cb0906024016020604051808303816000875af1158015610c67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8b9190611a2b565b50610f22565b6000846002811115610ca557610ca561188f565b1415610f2257610ce06001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333089611426565b610d346001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000088611464565b604051637acb775760e01b8152600481018790523060248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637acb7757906044016020604051808303816000875af1158015610da1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc59190611a5c565b50604051630f41a04d60e11b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631e83409a90602401600060405180830381600087803b158015610e2757600080fd5b505af1158015610e3b573d6000803e3d6000fd5b50610e959250506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690507f000000000000000000000000000000000000000000000000000000000000000088611464565b604051630ea598cb60e41b8152600481018790527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ea598cb0906024016020604051808303816000875af1158015610efc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f209190611a2b565b505b505050505050565b336000908152600660209081526040808320815160c0810183528154815260018083015494820194909452600282015492810192909252600381015491929091606084019160ff90911690811115610f8457610f8461188f565b6001811115610f9557610f9561188f565b81526003919091015460ff6101008204811615156020840152620100009091041615156040909101529050600260055460ff166002811115610fd957610fd961188f565b14610ff75760405163baf3f0f760e01b815260040160405180910390fd5b80608001511561101a576040516306d3830f60e21b815260040160405180910390fd5b80516008805460009061102e908490611a44565b90915550600090508160600151600181111561104c5761104c61188f565b141561112d5760008160a0015161106557600154611069565b6002545b90506000670de0b6b3a7640000827f000000000000000000000000000000000000000000000000000000000000000085600001516110a79190611980565b6110b19190611980565b6110bb919061199f565b905080600960008282546110cf9190611a44565b9091555050336000818152600660205260409020600301805461ff001916610100179055611128907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169083611373565b505050565b6001816060015160018111156111455761114561188f565b1415611223576000611164826020015183604001518460a00151610654565b90506000670de0b6b3a7640000827f000000000000000000000000000000000000000000000000000000000000000085600001516111a29190611980565b6111ac9190611980565b6111b6919061199f565b905080600a60008282546111ca9190611a44565b9091555050336000818152600660205260409020600301805461ff001916610100179055611128907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169083611373565b60405163094fcf0160e41b815260040160405180910390fd5b6000546001600160a01b031633146112665760405162461bcd60e51b81526004016104a39061191e565b600580546002919060ff19166001836104bb565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106fc573d6000803e3d6000fd5b6000546001600160a01b031633146113055760405162461bcd60e51b81526004016104a39061191e565b6001600160a01b03811661136a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a3565b610651816113d6565b6040516001600160a01b03831660248201526044810182905261112890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611579565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b038085166024830152831660448201526064810182905261145e9085906323b872dd60e01b9060840161139f565b50505050565b8015806114de5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156114b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114dc9190611a2b565b155b6115495760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016104a3565b6040516001600160a01b03831660248201526044810182905261112890849063095ea7b360e01b9060640161139f565b60006115ce826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661164b9092919063ffffffff16565b80519091501561112857808060200190518101906115ec9190611a5c565b6111285760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104a3565b606061165a8484600085611662565b949350505050565b6060824710156116c35760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104a3565b843b6117115760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104a3565b600080866001600160a01b0316858760405161172d9190611aa5565b60006040518083038185875af1925050503d806000811461176a576040519150601f19603f3d011682016040523d82523d6000602084013e61176f565b606091505b509150915061177f82828661178a565b979650505050505050565b60608315611799575081610694565b8251156117a95782518084602001fd5b8160405162461bcd60e51b81526004016104a39190611ac1565b801515811461065157600080fd5b6000806000606084860312156117e657600080fd5b833592506020840135915060408401356117ff816117c3565b809150509250925092565b80356001600160a01b038116811461182157600080fd5b919050565b6000806040838503121561183957600080fd5b6118428361180a565b946020939093013593505050565b60008060006060848603121561186557600080fd5b8335925060208401356002811061187b57600080fd5b91506040840135600381106117ff57600080fd5b634e487b7160e01b600052602160045260246000fd5b60208101600383106118b9576118b961188f565b91905290565b6000602082840312156118d157600080fd5b6106948261180a565b868152602081018690526040810185905260c08101600285106118ff576118ff61188f565b60608201949094529115156080830152151560a0909101529392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008282101561197b5761197b611953565b500390565b600081600019048311821515161561199a5761199a611953565b500290565b6000826119bc57634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff8116811461182157600080fd5b600080600080600060a086880312156119f357600080fd5b6119fc866119c1565b9450602086015193506040860151925060608601519150611a1f608087016119c1565b90509295509295909350565b600060208284031215611a3d57600080fd5b5051919050565b60008219821115611a5757611a57611953565b500190565b600060208284031215611a6e57600080fd5b8151610694816117c3565b60005b83811015611a94578181015183820152602001611a7c565b8381111561145e5750506000910152565b60008251611ab7818460208701611a79565b9190910192915050565b6020815260008251806020840152611ae0816040850160208701611a79565b601f01601f1916919091016040019291505056fea26469706673582212208aae0dd394a72fa2157b6720bbb639c30e3fc6671f20416fb6381bf69d8ffe9864736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(uint256,uint8,uint8)": {
        "details": "tenderToken, unstaked tenderToken, or wrapped tenderTokens should be  approved for _amount before calling this",
        "params": {
          "_amount": "the about of tender tokens to deposit (9 decimals)",
          "_choice": "the redemption choice (see: RedemptionChoice)",
          "_depositToken": "0 - unstaked, 1 - staked, 2 - wrapped"
        }
      },
      "getGohmExchangeRate(uint256,uint256,bool)": {
        "details": "1e17 is to compensate for Chainlink oracle decimals of 9 for _index and 8 for _ohmPrice"
      },
      "getLatestOHMIndex()": {
        "returns": {
          "_0": "most recent OHM index in 9 decimals from Chainlink"
        }
      },
      "getLatestOHMPrice()": {
        "returns": {
          "_0": "most recent OHM price in 8 decimals from Chainlink"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "recoverERC20(address,uint256)": {
        "params": {
          "_amount": "the amount of `_token` to recover",
          "_token": "the token's address"
        }
      },
      "redeem()": {
        "details": "Since the target token is in 9 decimals"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "daiExchangeRate()": {
        "notice": "DAI per tender token if depositing BEFORE decision (18 decimals)"
      },
      "daiLaggardExchangeRate()": {
        "notice": "DAI per tender token if depositing AFTER decision (18 decimals)"
      },
      "deposit(uint256,uint8,uint8)": {
        "notice": "deposits tender tokens. Includes the desired redemption currency if the takeover bid succeeds. Locks in the price and index of gOHM at time of deposit. Subsequent deposits can be made, but the must include the same redemption choice as before. Will do the necessary steps to stake and wrap tokens. - Depositing wrapped tokens just transfers - Depositing staked tokens will transfer then wrap - Depositing unstaked tokens will transfer, stake, then wrap"
      },
      "getGohmExchangeRate(uint256,uint256,bool)": {
        "notice": "Returns what gOHM amount represents the tender offer exchange rate"
      },
      "getLatestOHMIndex()": {
        "notice": "Gets lates OHM index from Chainlink Oracle"
      },
      "getLatestOHMPrice()": {
        "notice": "Gets lates OHM price from Chainlink Oracle"
      },
      "gohmExchangeRate()": {
        "notice": "gOHM per tender token if depositing BEFORE decision (18 decimals)"
      },
      "gohmLaggardExchangeRate()": {
        "notice": "gOHM per tender token if depositing AFTER decision (18 decimals)"
      },
      "recoverERC20(address,uint256)": {
        "notice": "allows owner to withdraw arbitratry ERC20 tokens to msg.sender. Must be called by the owner"
      },
      "redeem()": {
        "notice": "redeems the tender tokens for the depositors chosen currency"
      },
      "setFailed()": {
        "notice": "set takeover state to failed. Allows depositors to withdraw"
      },
      "setPassed()": {
        "notice": "set the takeover state to passed. Allows depositors to redeem"
      },
      "setPending()": {
        "notice": "set the takeover state back to pending. Useful on testnets"
      },
      "withdraw()": {
        "notice": "withdraw all tender tokens after a failed takeover"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1405,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "daiExchangeRate",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 1408,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "daiLaggardExchangeRate",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1411,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "gohmExchangeRate",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1414,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "gohmLaggardExchangeRate",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1424,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "state",
        "offset": 0,
        "slot": "5",
        "type": "t_enum(State)1421"
      },
      {
        "astId": 1450,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "deposits",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_struct(Deposit)1445_storage)"
      },
      {
        "astId": 1452,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "totalDeposits",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1456,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "totalRedemptions",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 1458,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "daiDistributed",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 1460,
        "contract": "contracts/Escrow.sol:Escrow",
        "label": "gOHMDistributed",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(RedemptionChoice)1427": {
        "encoding": "inplace",
        "label": "enum Escrow.RedemptionChoice",
        "numberOfBytes": "1"
      },
      "t_enum(State)1421": {
        "encoding": "inplace",
        "label": "enum Escrow.State",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Deposit)1445_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Escrow.Deposit)",
        "numberOfBytes": "32",
        "value": "t_struct(Deposit)1445_storage"
      },
      "t_struct(Deposit)1445_storage": {
        "encoding": "inplace",
        "label": "struct Escrow.Deposit",
        "members": [
          {
            "astId": 1433,
            "contract": "contracts/Escrow.sol:Escrow",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1435,
            "contract": "contracts/Escrow.sol:Escrow",
            "label": "index",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1437,
            "contract": "contracts/Escrow.sol:Escrow",
            "label": "ohmPrice",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1440,
            "contract": "contracts/Escrow.sol:Escrow",
            "label": "choice",
            "offset": 0,
            "slot": "3",
            "type": "t_enum(RedemptionChoice)1427"
          },
          {
            "astId": 1442,
            "contract": "contracts/Escrow.sol:Escrow",
            "label": "didRedeem",
            "offset": 1,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 1444,
            "contract": "contracts/Escrow.sol:Escrow",
            "label": "isLaggard",
            "offset": 2,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
